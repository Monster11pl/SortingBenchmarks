// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(BenchmarkDbContext))]
    [Migration("20250618104438_AddHwInfoTable")]
    partial class AddHwInfoTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Data.Entities.Benchmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BenchmarkHardwareInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Elements")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("ExecutionTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SortAlgorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ThreadsUsed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BenchmarkHardwareInfoId");

                    b.ToTable("Benchmarks");
                });

            modelBuilder.Entity("Data.Entities.BenchmarkHardwareInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoresCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxClockSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Os")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OsUser")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SystemArchitecture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ThreadsCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BenchmarkHardwareInfos");
                });

            modelBuilder.Entity("Data.Entities.Benchmark", b =>
                {
                    b.HasOne("Data.Entities.BenchmarkHardwareInfo", "BenchmarkHardwareInfo")
                        .WithMany("Benchmarks")
                        .HasForeignKey("BenchmarkHardwareInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BenchmarkHardwareInfo");
                });

            modelBuilder.Entity("Data.Entities.BenchmarkHardwareInfo", b =>
                {
                    b.Navigation("Benchmarks");
                });
#pragma warning restore 612, 618
        }
    }
}
